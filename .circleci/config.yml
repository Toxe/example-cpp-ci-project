version: 2.1

orbs:
  win: circleci/windows@2.4.0

jobs:
  linux-gcc:
    docker:
      - image: ubuntu:19.10
    steps:
      - checkout
      - run: apt-get update
      - run: apt-get install -y software-properties-common
      - run: apt-add-repository ppa:ubuntu-toolchain-r/test
      - run: apt-get update
      - run: apt-get install -y ninja-build cmake git curl unzip tar g++-9
      - run: env|sort
      - run: ls -l /usr/bin
      - run: gcc-9 --version
      - run: g++-9 --version
      - run: ls -l $HOME
      - run: ls -l $HOME/project
      - run:
          command: |
            pushd $HOME
            git clone --depth 1 https://github.com/Microsoft/vcpkg.git vcpkg
            cd vcpkg
            CC=gcc-9 CXX=g++-9 ./bootstrap-vcpkg.sh --disableMetrics
            CC=gcc-9 CXX=g++-9 ./vcpkg install $(< $HOME/project/.vcpkg)
            popd
            mkdir build && cd build
            CC=gcc-9 CXX=g++-9 cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$HOME/vcpkg/scripts/buildsystems/vcpkg.cmake ..
            cmake --build .

  linux-gcc-machine:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run: pwd
      - run: ls -al $HOME
      - run: sudo apt-get update
      - run: sudo apt-get install -y software-properties-common
      - run: sudo apt-add-repository ppa:ubuntu-toolchain-r/test
      - run: sudo apt-get update
      - run: sudo apt-get install -y ninja-build cmake git curl unzip tar g++-9
      - run: env|sort
      - run: ls -l /usr/bin
      - run: gcc-9 --version
      - run: g++-9 --version
      - run: ls -l $HOME
      - run: ls -l $HOME/project
      - run:
          command: |
            pushd $HOME
            git clone --depth 1 https://github.com/Microsoft/vcpkg.git vcpkg
            cd vcpkg
            CC=gcc-9 CXX=g++-9 ./bootstrap-vcpkg.sh --disableMetrics
            CC=gcc-9 CXX=g++-9 ./vcpkg install $(< $HOME/project/.vcpkg)
            popd
            mkdir build && cd build
            CC=gcc-9 CXX=g++-9 cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$HOME/vcpkg/scripts/buildsystems/vcpkg.cmake ..
            cmake --build .

  linux-clang:
    docker:
      - image: ubuntu:19.10
    steps:
      - checkout
      - run: apt-get update
      - run: apt-get install -y wget gnupg software-properties-common
      - run: wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
      - run: apt-add-repository -u 'deb http://apt.llvm.org/eoan/ llvm-toolchain-eoan-9 main'
      - run: apt-get update
      - run: apt-get install -y ninja-build cmake git curl unzip tar
      - run: apt-get install -y -t llvm-toolchain-eoan-9 clang-9
      - run: apt search stdc++
      - run: apt search libc++
      - run: env|sort
      - run: ls -l /usr/bin
      - run: clang++-9 --version
      - run: ls -l $HOME
      - run: ls -l $HOME/project
      - run:
          command: |
            pushd $HOME
            git clone --depth 1 https://github.com/Microsoft/vcpkg.git vcpkg
            cd vcpkg
            CC=clang-9 CXX=clang++-9 ./bootstrap-vcpkg.sh --disableMetrics
            CC=clang-9 CXX=clang++-9 ./vcpkg install $(< $HOME/project/.vcpkg)
            popd
            mkdir build && cd build
            CC=clang-9 CXX=clang++-9 cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$HOME/vcpkg/scripts/buildsystems/vcpkg.cmake ..
            cmake --build .

  windows-msvc:
    executor: win/default
    steps:
      - checkout
      - run:
          command: |
            $ProgressPreference = "SilentlyContinue"
            Invoke-WebRequest -URI https://github.com/Kitware/CMake/releases/download/v3.16.4/cmake-3.16.4-win64-x64.zip -OutFile $Env:HOMEPATH\cmake-3.16.4-win64-x64.zip
      - run:
          command: |
            $ProgressPreference = "SilentlyContinue"
            Expand-Archive $Env:HOMEPATH\cmake-3.16.4-win64-x64.zip -DestinationPath $Env:HOMEPATH
      - run: Get-ChildItem "Env:" | Sort Name
      - run:
          command: |
            New-Alias -Name git -Value "$Env:ProgramFiles\Git\bin\git.exe"
            New-Alias -Name cmake -Value "$Env:HOMEPATH\cmake-3.16.4-win64-x64\bin\cmake.exe"
            cd $Env:HOMEPATH
            git clone --quiet --depth 1 https://github.com/Microsoft/vcpkg.git vcpkg-msvc
            cd vcpkg-msvc
            .\bootstrap-vcpkg.bat -disableMetrics
            $packages = Get-Content "$Env:CIRCLE_WORKING_DIRECTORY\.vcpkg"
            .\vcpkg install --triplet x64-windows $packages
            cd $Env:CIRCLE_WORKING_DIRECTORY
            mkdir build-msvc
            cd build-msvc
            cmake -DCMAKE_BUILD_TYPE=Release -DVCPKG_TARGET_TRIPLET=x64-windows -DCMAKE_TOOLCHAIN_FILE="$Env:HOMEPATH\vcpkg-msvc\scripts\buildsystems\vcpkg.cmake" ..
            cmake --build .


workflows:
  version: 2
  run-all:
    jobs:
      - linux-gcc
      - linux-gcc-machine
      - linux-clang
      - windows-msvc
