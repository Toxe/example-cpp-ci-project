image:
  - macOS
  - Ubuntu
  - Visual Studio 2019

platform:
  - x64

for:
-
  matrix:
    only:
      - image: macOS

  install:
    - CC_CLANG=/usr/local/opt/llvm/bin/clang
    - CXX_CLANG=/usr/local/opt/llvm/bin/clang++
    - CC_GCC=gcc-9
    - CXX_GCC=g++-9

    - brew install ninja llvm gcc
    - pushd $HOME
    - git clone --depth 1 https://github.com/Microsoft/vcpkg.git vcpkg-clang
    - cd vcpkg-clang
    - CC=$CC_CLANG CXX=$CXX_CLANG ./bootstrap-vcpkg.sh --disableMetrics
    - CC=$CC_CLANG CXX=$CXX_CLANG ./vcpkg install $(< $APPVEYOR_BUILD_FOLDER/.vcpkg)
    - cd ..
    - git clone --depth 1 https://github.com/Microsoft/vcpkg.git vcpkg-gcc
    - cd vcpkg-gcc
    - CC=$CC_GCC CXX=$CXX_GCC ./bootstrap-vcpkg.sh --disableMetrics
    - CC=$CC_GCC CXX=$CXX_GCC ./vcpkg install $(< $APPVEYOR_BUILD_FOLDER/.vcpkg)
    - popd

-
  matrix:
    only:
      - image: Ubuntu

  install:
    - CC_CLANG=clang-9
    - CXX_CLANG=clang++-9
    - CC_GCC=gcc-9
    - CXX_GCC=g++-9

    - sudo apt-get install ninja-build
    - pushd $HOME
    - rm -rf vcpkg
    - git clone --depth 1 https://github.com/Microsoft/vcpkg.git vcpkg-clang
    - cd vcpkg-clang
    - CC=$CC_CLANG CXX=$CXX_CLANG ./bootstrap-vcpkg.sh --disableMetrics
    - CC=$CC_CLANG CXX=$CXX_CLANG ./vcpkg install $(< $APPVEYOR_BUILD_FOLDER/.vcpkg)
    - cd ..
    - git clone --depth 1 https://github.com/Microsoft/vcpkg.git vcpkg-gcc
    - cd vcpkg-gcc
    - CC=$CC_GCC CXX=$CXX_GCC ./bootstrap-vcpkg.sh --disableMetrics
    - CC=$CC_GCC CXX=$CXX_GCC ./vcpkg install $(< $APPVEYOR_BUILD_FOLDER/.vcpkg)
    - popd

-
  matrix:
    only:
      - image: Visual Studio 2019

  install:
    # checkout and build Vcpkg in $HOME
    - ps: cd $Env:HOMEPATH
    - ps: New-Alias -Name git -Value "$Env:ProgramFiles\Git\bin\git.exe"
    - ps: git clone --quiet --depth 1 https://github.com/Microsoft/vcpkg.git vcpkg-msvc
    - ps: cd vcpkg-msvc
    - ps: .\bootstrap-vcpkg.bat -disableMetrics
    # install packages listed in .vcpkg
    - ps: $packages = Get-Content "$Env:APPVEYOR_BUILD_FOLDER\.vcpkg"
    - ps: .\vcpkg install --triplet x64-windows $packages
    - ps: cd $Env:APPVEYOR_BUILD_FOLDER

build_script:
  - mkdir build-clang && cd build-clang
  - CC=$CC_CLANG CXX=$CXX_CLANG cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$HOME/vcpkg-clang/scripts/buildsystems/vcpkg.cmake ..
  - cmake --build .
  - cd ..
  - mkdir build-gcc && cd build-gcc
  - CC=$CC_GCC CXX=$CXX_GCC cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$HOME/vcpkg-gcc/scripts/buildsystems/vcpkg.cmake ..
  - cmake --build .

  - ps: mkdir build-msvc
  - ps: cd build-msvc
  - ps: cmake -DCMAKE_BUILD_TYPE=Release -DVCPKG_TARGET_TRIPLET=x64-windows -DCMAKE_TOOLCHAIN_FILE="$Env:HOMEPATH\vcpkg-msvc\scripts\buildsystems\vcpkg.cmake" ..
  - ps: cmake --build .
