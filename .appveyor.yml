image:
  - macOS
  - Ubuntu
  - Visual Studio 2019

platform:
  - x64

environment:
  APPVEYOR_YML_DISABLE_PS_LINUX: true

for:
-
  matrix:
    only:
      - image: macOS
  environment:
    CC_CLANG: /usr/local/opt/llvm/bin/clang
    CXX_CLANG: /usr/local/opt/llvm/bin/clang++
    CXXFLAGS_CLANG: -stdlib=libc++
    CC_GCC: gcc-9
    CXX_GCC: g++-9
  install:
    - brew install ninja llvm gcc

-
  matrix:
    only:
      - image: Ubuntu
  environment:
    CC_CLANG: clang-9
    CXX_CLANG: clang++-9
    CXXFLAGS_CLANG: -stdlib=libc++
    CC_GCC: gcc-9
    CXX_GCC: g++-9
  install:
    - curl -s https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo apt-add-repository -y 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
    - sudo apt-get update
    - dpkg --get-selections | grep hold
    - sudo apt-get -y --allow-change-held-packages remove clang-9 mssql-server
    - sudo apt-get -y autoremove
    - sudo apt-get -y install clang-9 libc++-9-dev libc++abi-9-dev

-
  matrix:
    only:
      - image: Visual Studio 2019
  install:
    - ps: New-Alias -Name git -Value "$Env:ProgramFiles\Git\bin\git.exe"


before_build:
  # ---- Mac & Linux ----
  - sh: pushd $HOME
  # build Vcpkg and install packages (from .vcpkg) with Clang
  - sh: git clone --depth 1 https://github.com/Microsoft/vcpkg.git vcpkg-clang
  - sh: cd vcpkg-clang
  - sh: CC=$CC_CLANG CXX=$CXX_CLANG CXXFLAGS=$CXXFLAGS_CLANG ./bootstrap-vcpkg.sh --disableMetrics
  - sh: CC=$CC_CLANG CXX=$CXX_CLANG CXXFLAGS=$CXXFLAGS_CLANG ./vcpkg install $(< $APPVEYOR_BUILD_FOLDER/.vcpkg)
  - sh: cd ..
  # build Vcpkg and install packages (from .vcpkg) with GCC
  - sh: git clone --depth 1 https://github.com/Microsoft/vcpkg.git vcpkg-gcc
  - sh: cd vcpkg-gcc
  - sh: CC=$CC_GCC CXX=$CXX_GCC ./bootstrap-vcpkg.sh --disableMetrics
  - sh: CC=$CC_GCC CXX=$CXX_GCC ./vcpkg install $(< $APPVEYOR_BUILD_FOLDER/.vcpkg)
  - sh: popd

  # ---- Windows ----
  # build Vcpkg and install packages (from .vcpkg) with MSVC
  - ps: cd $Env:HOMEPATH
  - ps: git clone --quiet --depth 1 https://github.com/Microsoft/vcpkg.git vcpkg-msvc
  - ps: cd vcpkg-msvc
  - ps: .\bootstrap-vcpkg.bat -disableMetrics
  - ps: $packages = Get-Content "$Env:APPVEYOR_BUILD_FOLDER\.vcpkg"
  - ps: .\vcpkg install --triplet x64-windows $packages
  - ps: cd $Env:APPVEYOR_BUILD_FOLDER


build_script:
  # ---- Mac & Linux ----
  # build project with Clang
  - sh: mkdir build-clang && cd build-clang
  - sh: CC=$CC_CLANG CXX=$CXX_CLANG CXXFLAGS=$CXXFLAGS_CLANG cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$HOME/vcpkg-clang/scripts/buildsystems/vcpkg.cmake ..
  - sh: cmake --build .
  - sh: ./example_simple
  - sh: cd ..
  # build project with GCC
  - sh: mkdir build-gcc && cd build-gcc
  - sh: CC=$CC_GCC CXX=$CXX_GCC cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$HOME/vcpkg-gcc/scripts/buildsystems/vcpkg.cmake ..
  - sh: cmake --build .
  - sh: ./example_simple

  # ---- Windows ----
  # build project with MSVC
  - ps: mkdir build-msvc
  - ps: cd build-msvc
  - ps: cmake -DCMAKE_BUILD_TYPE=Release -DVCPKG_TARGET_TRIPLET=x64-windows -DCMAKE_TOOLCHAIN_FILE="$Env:HOMEPATH\vcpkg-msvc\scripts\buildsystems\vcpkg.cmake" ..
  - ps: cmake --build . --config Release
  - ps: .\Release\example_simple.exe
